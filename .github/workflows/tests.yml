name: Tests

on: [push, pull_request]

jobs:
  testsuite:
    name: all tests
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php: [ '7.4', '8.0', '8.1', '8.2', '8.3' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Composer
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s composerInstallMax

      - name: Composer validate
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s composerValidate

      - name: Lint PHP
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s lint

      - name: Unit tests
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s unit

      - name: Functional tests with mariadb
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -d mariadb -s functional

      - name: Functional tests with postgres
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -d postgres -s functional

      - name: Functional tests with sqlite
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -d sqlite -s functional

      - name: Upload coverage results to Scrutinizer
        if: matrix.typo3 == '^11.5' && matrix.php == '7.4'
        run: |
          wget https://scrutinizer-ci.com/ocular.phar
          php ocular.phar code-coverage:upload --format=php-clover unittest-coverage.clover
          find 'Tests/Functional' -wholename '*Test.php' -exec php ocular.phar code-coverage:upload --format=php-clover {}functionaltest-coverage.clover \;